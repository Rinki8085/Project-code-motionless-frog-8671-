{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\OneDrive\\\\Desktop\\\\Motionless_frog\\\\motionless_frog\\\\src\\\\index.js\";\n//import { extendTheme } from \"@chakra-ui/react\";\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\"; // 2. Call `extendTheme` and pass your custom values\n// const theme = extendTheme({\n//   colors: {\n//     textStyles: {\n//       h1: {\n//         // you can also use responsive styles\n//         fontSize: [\"48px\", \"72px\"],\n//         fontWeight: \"bold\",\n//         lineHeight: \"110%\",\n//         letterSpacing: \"-2%\",\n//         color: \"red\"\n//       },\n//       h2: {\n//         fontSize: [\"36px\", \"48px\"],\n//         fontWeight: \"semibold\",\n//         lineHeight: \"110%\",\n//         letterSpacing: \"-1%\"\n//       }\n//     }\n//   }\n// });\n//const theme = extendTheme({colors});\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render( /*#__PURE__*/_jsxDEV(StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 34,\n  columnNumber: 3\n}, this));","map":{"version":3,"names":["StrictMode","createRoot","App","ChakraProvider","rootElement","document","getElementById","root","render"],"sources":["C:/Users/hp/OneDrive/Desktop/Motionless_frog/motionless_frog/src/index.js"],"sourcesContent":["//import { extendTheme } from \"@chakra-ui/react\";\nimport { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport App from \"./App\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\n// 2. Call `extendTheme` and pass your custom values\n// const theme = extendTheme({\n//   colors: {\n//     textStyles: {\n//       h1: {\n//         // you can also use responsive styles\n//         fontSize: [\"48px\", \"72px\"],\n//         fontWeight: \"bold\",\n//         lineHeight: \"110%\",\n//         letterSpacing: \"-2%\",\n//         color: \"red\"\n//       },\n//       h2: {\n//         fontSize: [\"36px\", \"48px\"],\n//         fontWeight: \"semibold\",\n//         lineHeight: \"110%\",\n//         letterSpacing: \"-1%\"\n//       }\n//     }\n//   }\n// });\n//const theme = extendTheme({colors});\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <ChakraProvider>\n      <App />\n    </ChakraProvider>\n  </StrictMode>\n);\n"],"mappings":";AAAA;AACA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,SAASC,cAAT,QAA+B,kBAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA,MAAMC,IAAI,GAAGN,UAAU,CAACG,WAAD,CAAvB;AAEAG,IAAI,CAACC,MAAL,eACE,QAAC,UAAD;EAAA,uBACE,QAAC,cAAD;IAAA,uBACE,QAAC,GAAD;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA;AADF;EAAA;EAAA;EAAA;AAAA,QADF"},"metadata":{},"sourceType":"module"}